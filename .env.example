
###
### MANDATORY
###

# The kind of RPC provider, used to inform optimal transactions receipts
# fetching. Valid options: reth, alchemy, quicknode, infura, parity, nethermind,
# debug_geth, erigon, basic, any.
export L1_RPC_KIND=

# RPC URL for the L1 network to interact with
export L1_RPC_URL=
export L1_BEACON_RPC_URL=

###
### IF RUNNING SEQUENCER
###

### op-stack
export L1_CHAIN_ID=11155111
# Sigil chain id
export L2_CHAIN_ID=51611
# TODO: remove these, use defaults
export L1_BLOCK_TIME=12
export L2_BLOCK_TIME=4
export GS_BATCHER_ADDRESS=
GS_BATCHER_PRIVATE_KEY=
export GS_SEQUENCER_ADDRESS=
GS_SEQUENCER_PRIVATE_KEY=

### op-succinct-validity
# TODO: can we do the setting of this somewhere else?  This file should
# have minimal fields
L1_RPC=$L1_RPC_URL
L1_BEACON_RPC=$L1_BEACON_RPC_URL

# TODO: this is reth instance
L2_RPC=http://localhost:8545
# TODO: this is op-node instance
L2_NODE_RPC=http://localhost:9545

# Address that submits the aggregation proof for validation
PRIVATE_KEY=
# Contract address of the op-succinct L2 Output Oracle contract
L2OO_ADDRESS=
# Contract address of the op-succinct dispute game factory
DGF_ADDRESS=
# TODO: spin up local db
DATABASE_URL=
# TODO: support cpu or local cuda proofs
SP1_PROVER=network
# succinct prover network rpc.  Usually a self-hosted hierophant instance
NETWORK_RPC_URL=
# Succinct prover network authenticated private key.  If you're running Hierophant
# this can be any private key
NETWORK_PRIVATE_KEY=
# How many blocks per span proof
RANGE_PROOF_INTERVAL=
# How many blocks per agg proof
SUBMISSION_INTERVAL=
# How many provers working concurrently
MAX_CONCURRENT_PROOF_REQUESTS=

###
### Optional.  Just in case you run into port conflicts on the host machine.
### See docker-compose files for defaults

PORT__OP_RETH_HTTP=
PORT__OP_RETH_WS=
PORT__OP_RETH_P2P=

PORT__OP_NODE_P2P=
PORT__OP_NODE_HTTP=

PORT__OP_SUCCINCT_VALIDITY_HTTP=

PORT__OP_BATCHER_HTTP=
